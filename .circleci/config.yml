# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

jobs:
  # create_infrastructure:
  #   docker:
  #   - image: amazon/aws-cli
  #   steps:
  #     - checkout
  #     - run:
  #         name: Deploy CloudFormation Stack
  #         command: |
  #           aws cloudformation deploy --template-file sample-stack.yml \
  #           --stack sample-ec2-stack

  configure_infrastructure:
    docker:
      - image: python:3.9.1-alpine3.12
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["e1:84:f7:0e:6f:c5:70:96:82:7f:6f:1c:31:45:a9:cd"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt playbook-remote-web-server.yml

  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test.
            command: |
              URL="https://blog.udacity.com/"
              if curl -s --head ${URL} # test if blog.udacity. com exists
              then
               return 0
              else
               return 1
              fi
        - run: 
            name: "Activate On Error - protocol"
            command: echo "We got an error, launching rollback process"
            when: on_fail

  end_job:
    docker:
      - image: alpine:latest
    steps:
      - run: echo "*** Finishing Pipeline ***"

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  deploy_infrastructure:
    # Run the welcome/run job in its own container
    jobs:
      # - create_infrastructure
      - configure_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
      - end_job:
          requires:
            - smoke_test
