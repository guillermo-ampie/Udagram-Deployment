# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

# Project's environment variable:
# STACK_NAME: The CloudFormation stack name to create

commands:
  destroy_environment: 
    steps:
      - run: 
          # name:  "Delete the environment"
          command: |
            echo "Deleting stack: ${STACK_NAME}"
            export TERM=ansi
            aws cloudformation delete-stack --stack-name ${STACK_NAME}
          when: on_fail


jobs:
  create_infrastructure:
    docker:
    - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy CloudFormation stack
          command: |
            export TERM=ansi
            aws cloudformation deploy --template-file sample-stack.yml \
            --stack ${STACK_NAME}
      - destroy_environment

  configure_infrastructure:
    docker:
      - image: python:3.9.1-alpine3.12
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["e1:84:f7:0e:6f:c5:70:96:82:7f:6f:1c:31:45:a9:cd"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt playbook-remote-web-server.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: non_existent_command
      - destroy_environment
      
  end_job:
    docker:
      - image: alpine:latest
    steps:
      - run: echo "*** Finishing Pipeline ***"

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  deploy_infrastructure:
    # Run the welcome/run job in its own container
    jobs:
      - create_infrastructure
      # - configure_infrastructure:
      #     requires:
      #       - create_infrastructure
      - smoke_test:
          requires:
            # - configure_infrastructure
            - create_infrastructure
      # - end_job:
      #     requires:
      #       - smoke_test
